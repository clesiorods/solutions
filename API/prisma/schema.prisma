// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id             Int       @id @unique @default(autoincrement())
  name           String?
  email          String    @unique
  password       String    @default("")
  photo_url      String    @default("")
  is_admin       Int       @default(0)
  is_super_admin Int       @default(0)
  notes          Note[]
  created_at     DateTime  @default(now())
  created_by     Int?
  updated_at     DateTime  @updatedAt
  updated_by     Int?
  deleted_at     DateTime?
  deleted_by     Int?
}

model RefreshToken {
  id        String @id @default(uuid())
  expiresIn Int
  id_user   Int
}

model Payables {
  id                 Int       @id @default(autoincrement())
  type               Int       @default(2) // 1 - receita, 2 - dispesa
  title              String?
  description        String?
  code               String?
  date_expiration    DateTime
  date_payment       DateTime?
  value              Float
  discount           Float?    @default(0)
  addiction          Float?    @default(0)
  amount_paid        Float?    @default(0)
  is_parcel          Int?      @default(0)
  first_parcel       Int?
  total_parcel_value Float?
  quantity_parcel    Int?
  id_user            Int
  obs                String?
  created_at         DateTime  @default(now())
  created_by         Int?
  updated_at         DateTime  @updatedAt
  updated_by         Int?
  deleted_at         DateTime?
  deleted_by         Int?
}

model Module {
  id          Int       @id @default(autoincrement())
  description String
  group       String
  icon        String    @default("")
  path        String    @default("")
  order       Int       @default(0)
  created_at  DateTime  @default(now())
  created_by  Int?
  updated_at  DateTime  @updatedAt
  updated_by  Int?
  deleted_at  DateTime?
  deleted_by  Int?
}

model Note {
  id         Int       @id @default(autoincrement())
  title      String
  content    String?
  userId     Int
  author     User      @relation(fields: [userId], references: [id])
  created_at DateTime  @default(now())
  created_by Int?
  updated_at DateTime  @updatedAt
  updated_by Int?
  deleted_at DateTime?
  deleted_by Int?
}
